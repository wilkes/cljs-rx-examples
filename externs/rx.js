function jQuery(arg1, arg2) {};
var Rx;

jQuery.ajaxAsObservable = function () {};
jQuery.prototype.fn.onAsObservable = function(events, selector, data) {};

Rx.BehaviorSubject = function() {};

Rx.AnonymousObserver.prototype.onNext = function() {};
Rx.AnonymousObserver.prototype.onError = function() {};
Rx.AnonymousObserver.prototype.onCompleted = function() {};

Rx.Observable.prototype.aggregate = function() {};
Rx.Observable.prototype.all = function() {};
Rx.Observable.prototype.amb = function() {};
Rx.Observable.prototype.and = function() {};
Rx.Observable.prototype.any = function() {};
Rx.Observable.prototype.asObservable = function() {};
Rx.Observable.prototype.average = function() {};
Rx.Observable.prototype.buffer = function() {};
Rx.Observable.prototype.bufferWithCount = function() {};
Rx.Observable.prototype.bufferWithTime = function() {};
Rx.Observable.prototype.bufferWithTimeOrCount = function() {};
Rx.Observable.prototype.catchException = function() {};
Rx.Observable.prototype.combineLatest = function() {};
Rx.Observable.prototype.concat = function() {};
Rx.Observable.prototype.concatObservable = function() {};
Rx.Observable.prototype.contains = function() {};
Rx.Observable.prototype.count = function() {};
Rx.Observable.prototype.defaultIfEmpty = function() {};
Rx.Observable.prototype.delay = function() {};
Rx.Observable.prototype.delaySubscription = function() {};
Rx.Observable.prototype.dematerialize = function() {};
Rx.Observable.prototype.distinct = function() {};
Rx.Observable.prototype.distinctUntilChanged = function() {};
Rx.Observable.prototype.doAction = function() {};
Rx.Observable.prototype.doWhile = function() {};
Rx.Observable.prototype.elementAt = function() {};
Rx.Observable.prototype.elementAtOrDefault = function() {};
Rx.Observable.prototype.empty = function() {};
Rx.Observable.prototype.expand = function() {};
Rx.Observable.prototype.finallyAction = function() {};
Rx.Observable.prototype.first = function() {};
Rx.Observable.prototype.firstOrDefault = function() {};
Rx.Observable.prototype.forkJoin = function() {};
Rx.Observable.prototype.groupBy = function() {};
Rx.Observable.prototype.groupByUntil = function() {};
Rx.Observable.prototype.groupJoin = function() {};
Rx.Observable.prototype.ignoreElements = function() {};
Rx.Observable.prototype.isEmpty = function() {};
Rx.Observable.prototype.join = function() {};
Rx.Observable.prototype.last = function() {};
Rx.Observable.prototype.lastOrDefault = function() {};
Rx.Observable.prototype.max = function() {};
Rx.Observable.prototype.maxBy = function() {};
Rx.Observable.prototype.merge = function() {};
Rx.Observable.prototype.mergeObservable = function() {};
Rx.Observable.prototype.min = function() {};
Rx.Observable.prototype.minBy = function() {};
Rx.Observable.prototype.multicast = function() {};
Rx.Observable.prototype.observeOn = function() {};
Rx.Observable.prototype.onErrorResumeNext = function() {};
Rx.Observable.prototype.publish = function() {};
Rx.Observable.prototype.publishLast = function() {};
Rx.Observable.prototype.publishValue = function() {};
Rx.Observable.prototype.refCount = function() {};
Rx.Observable.prototype.repeat = function() {};
Rx.Observable.prototype.replay = function() {};
Rx.Observable.prototype.retry = function() {};
Rx.Observable.prototype.sample = function() {};
Rx.Observable.prototype.scan = function() {};
Rx.Observable.prototype.select = function() {};
Rx.Observable.prototype.selectMany = function() {};
Rx.Observable.prototype.single = function() {};
Rx.Observable.prototype.singleOrDefault = function() {};
Rx.Observable.prototype.skip = function() {};
Rx.Observable.prototype.skipLast = function() {};
Rx.Observable.prototype.skipUntil = function() {};
Rx.Observable.prototype.skipWhile = function() {};
Rx.Observable.prototype.startWith = function() {};
Rx.Observable.prototype.subscribe = function() {};
Rx.Observable.prototype.subscribeOn = function() {};
Rx.Observable.prototype.sum = function() {};
Rx.Observable.prototype.switchLatest = function() {};
Rx.Observable.prototype.take = function() {};
Rx.Observable.prototype.takeLast = function() {};
Rx.Observable.prototype.takeLastBuffer = function() {};
Rx.Observable.prototype.takeUntil = function() {};
Rx.Observable.prototype.takeWhile = function() {};
Rx.Observable.prototype.then = function() {};
Rx.Observable.prototype.throttle = function() {};
Rx.Observable.prototype.throwException = function() {};
Rx.Observable.prototype.timeInterval = function() {};
Rx.Observable.prototype.timestamp = function() {};
Rx.Observable.prototype.timeout = function() {};
Rx.Observable.prototype.toArray = function() {};
Rx.Observable.prototype.using = function() {};
Rx.Observable.prototype.where = function() {};
Rx.Observable.prototype.window = function() {};
Rx.Observable.prototype.windowWithCount = function() {};
Rx.Observable.prototype.windowWithTime = function() {};
Rx.Observable.prototype.windowWithTimeOrCount = function() {};
Rx.Observable.prototype.zip = function() {};
